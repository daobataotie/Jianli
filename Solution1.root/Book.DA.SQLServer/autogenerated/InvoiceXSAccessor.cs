//------------------------------------------------------------------------------
//
// 说明： 该文件中的内容是由代码生成器自动生成的，请勿手工修改！
//
// file name：InvoiceXSAccessor.autogenerated.cs
// author: peidun
// create date：2009-10-28 16:07:30
//
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Text;

namespace Book.DA.SQLServer
{
    public partial class InvoiceXSAccessor
    {
		public Model.InvoiceXS Get(string id)
		{
			return this.Get<Model.InvoiceXS>(id);
		}
		
		public void Insert(Model.InvoiceXS e)
		{
			this.Insert<Model.InvoiceXS>(e);
		}
		
		public void Update(Model.InvoiceXS e)
		{
			this.Update<Model.InvoiceXS>(e);
		}
		
		public IList<Model.InvoiceXS> Select()
		{
			return this.Select<Model.InvoiceXS>();
		}
		
		public IList<Model.InvoiceXS> Select(Helper.OrderDescription orderDescription, Helper.PagingDescription pagingDescription)
		{
			return this.Select<Model.InvoiceXS>(orderDescription,pagingDescription);
		}
		public void Delete(string id)
		{
            #region 编号递减  
            //2020年1月3日21:41:43  删单编号不回补
            //Model.InvoiceXS model = this.Get(id);
            //string invoiceKind = "XS".ToLower();
            //string sequencekey_d = string.Format("{0}-d-{1}", invoiceKind, model.InsertTime.Value.ToString("yyyy-MM-dd"));
            //Model.Sequence sequence = new SequenceAccessor().Get(sequencekey_d);
            //if (sequence != null)
            //{
            //    sequence.Val--;
            //    new SequenceAccessor().Update(sequence);
            //}
            #endregion

			this.Delete<Model.InvoiceXS>(id);
		}
		public bool HasRows(string id)
		{
			return this.HasRows<Model.InvoiceXS>(id);
		}
		public bool HasRows()
		{
			return this.HasRows<Model.InvoiceXS>();
		}
		public int Count()
		{
			return this.Count<Model.InvoiceXS>();
		}
		public bool HasRowsBefore(Model.InvoiceXS e)
		{
			return sqlmapper.QueryForObject<bool>("InvoiceXS.has_rows_before", e);
		}
		public bool HasRowsAfter(Model.InvoiceXS e)
		{
			return sqlmapper.QueryForObject<bool>("InvoiceXS.has_rows_after", e);
		}
		public Model.InvoiceXS GetFirst()
		{
			return sqlmapper.QueryForObject<Model.InvoiceXS>("InvoiceXS.get_first", null);
		}
		public Model.InvoiceXS GetLast()
		{
			return sqlmapper.QueryForObject<Model.InvoiceXS>("InvoiceXS.get_last", null);
		}
		public Model.InvoiceXS GetNext(Model.InvoiceXS e)
		{
			return sqlmapper.QueryForObject<Model.InvoiceXS>("InvoiceXS.get_next", e);
		}
		public Model.InvoiceXS GetPrev(Model.InvoiceXS e)
		{
			return sqlmapper.QueryForObject<Model.InvoiceXS>("InvoiceXS.get_prev", e);
		}
		

    }
}
