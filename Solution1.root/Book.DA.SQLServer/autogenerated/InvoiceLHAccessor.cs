//------------------------------------------------------------------------------
//
// 说明： 该文件中的内容是由代码生成器自动生成的，请勿手工修改！
//
// file name：InvoiceLHAccessor.autogenerated.cs
// author: mayanjun
// create date：2018/10/20 15:49:33
//
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Text;

namespace Book.DA.SQLServer
{
    public partial class InvoiceLHAccessor
    {
		public Model.InvoiceLH Get(string id)
		{
			return this.Get<Model.InvoiceLH>(id);
		}
		
		public void Insert(Model.InvoiceLH e)
		{
			this.Insert<Model.InvoiceLH>(e);
		}
		
		public void Update(Model.InvoiceLH e)
		{
			this.Update<Model.InvoiceLH>(e);
		}
		
		public IList<Model.InvoiceLH> Select()
		{
			return this.Select<Model.InvoiceLH>();
		}
		
		public IList<Model.InvoiceLH> Select(Helper.OrderDescription orderDescription, Helper.PagingDescription pagingDescription)
		{
			return this.Select<Model.InvoiceLH>(orderDescription,pagingDescription);
		}
		public void Delete(string id)
		{
            #region 编号递减
            Model.InvoiceLH model = this.Get(id);
            string invoiceKind = "LH".ToLower();
            string sequencekey_m = string.Format("{0}-m-{1}-{2}", invoiceKind, model.InvoiceDate.Value.Year, model.InvoiceDate.Value.Month);
            Model.Sequence sequence = new SequenceAccessor().Get(sequencekey_m);
            if (sequence != null)
            {
                if (Convert.ToInt32(id.Substring(4)) >= sequence.Val)
                {
                    sequence.Val--;
                    sequence.Val = sequence.Val < 0 ? 0 : sequence.Val;

                    new SequenceAccessor().Update(sequence);
                }
            }
            #endregion

			this.Delete<Model.InvoiceLH>(id);
		}
		public bool HasRows(string id)
		{
			return this.HasRows<Model.InvoiceLH>(id);
		}
		public bool HasRows()
		{
			return this.HasRows<Model.InvoiceLH>();
		}
		public int Count()
		{
			return this.Count<Model.InvoiceLH>();
		}
		public bool HasRowsBefore(Model.InvoiceLH e)
		{
			return sqlmapper.QueryForObject<bool>("InvoiceLH.has_rows_before", e);
		}
		public bool HasRowsAfter(Model.InvoiceLH e)
		{
			return sqlmapper.QueryForObject<bool>("InvoiceLH.has_rows_after", e);
		}
		public Model.InvoiceLH GetFirst()
		{
			return sqlmapper.QueryForObject<Model.InvoiceLH>("InvoiceLH.get_first", null);
		}
		public Model.InvoiceLH GetLast()
		{
			return sqlmapper.QueryForObject<Model.InvoiceLH>("InvoiceLH.get_last", null);
		}
		public Model.InvoiceLH GetNext(Model.InvoiceLH e)
		{
			return sqlmapper.QueryForObject<Model.InvoiceLH>("InvoiceLH.get_next", e);
		}
		public Model.InvoiceLH GetPrev(Model.InvoiceLH e)
		{
			return sqlmapper.QueryForObject<Model.InvoiceLH>("InvoiceLH.get_prev", e);
		}
		

		public bool ExistsPrimary(string id)
		{			
			return sqlmapper.QueryForObject<bool>("InvoiceLH.existsPrimary", id);
		}
    }
}
